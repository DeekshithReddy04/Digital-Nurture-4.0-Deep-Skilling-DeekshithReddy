

-- Create customers table
CREATE TABLE customers (
    customer_id         NUMBER PRIMARY KEY,
    name                VARCHAR2(50),
    age                 NUMBER,
    balance             NUMBER(10,2),
    loan_interest_rate  NUMBER(5,2),
    isVIP               VARCHAR2(5)
);

-- Create loans table
CREATE TABLE loans (
    loan_id     NUMBER PRIMARY KEY,
    customer_id NUMBER,
    due_date    DATE,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

-- Insert sample data
INSERT INTO customers VALUES (1, 'Alice', 65, 12000, 7.5, 'FALSE');
INSERT INTO customers VALUES (2, 'Bob', 45, 8000, 8.0, 'FALSE');
INSERT INTO customers VALUES (3, 'Charlie', 70, 9500, 6.5, 'FALSE');
INSERT INTO customers VALUES (4, 'David', 58, 15000, 7.0, 'FALSE');

INSERT INTO loans VALUES (101, 1, SYSDATE + 10); -- within 30 days
INSERT INTO loans VALUES (102, 2, SYSDATE + 40); -- beyond 30 days
INSERT INTO loans VALUES (103, 3, SYSDATE + 5);  -- within 30 days
INSERT INTO loans VALUES (104, 4, SYSDATE + 25); -- within 30 days

COMMIT;
SET SERVEROUTPUT ON;
BEGIN
    FOR cust IN (SELECT customer_id, loan_interest_rate FROM customers WHERE age > 60) LOOP
        UPDATE customers
        SET loan_interest_rate = loan_interest_rate - 0.01
        WHERE customer_id = cust.customer_id;

        DBMS_OUTPUT.PUT_LINE('Discount applied to customer ID: ' || cust.customer_id);
    END LOOP;
    COMMIT;
END;
/
BEGIN
    FOR vip IN (SELECT customer_id FROM customers WHERE balance > 10000) LOOP
        UPDATE customers
        SET isVIP = 'TRUE'
        WHERE customer_id = vip.customer_id;

        DBMS_OUTPUT.PUT_LINE('Customer ID ' || vip.customer_id || ' promoted to VIP.');
    END LOOP;
    COMMIT;
END;
/

DECLARE
    v_found BOOLEAN := FALSE;
BEGIN
    FOR loan_rec IN (
        SELECT l.loan_id, l.due_date, c.name
        FROM loans l
        JOIN customers c ON l.customer_id = c.customer_id
        WHERE l.due_date BETWEEN SYSDATE AND SYSDATE + 30
    ) LOOP
        v_found := TRUE;
        DBMS_OUTPUT.PUT_LINE('Reminder: Dear ' || loan_rec.name ||
                             ', your loan ID ' || loan_rec.loan_id ||
                             ' is due on ' || TO_CHAR(loan_rec.due_date, 'DD-MON-YYYY'));
    END LOOP;

    IF NOT v_found THEN
        DBMS_OUTPUT.PUT_LINE('No loans due within the next 30 days.');
    END IF;
END;
/

SELECT * FROM customers;
